/** 개발자계정 */
entity LemonDevAccnt {
	accnt String required maxlength(30),
	serviceCd String required maxlength(30),
	securityCd String required maxlength(30),
	returnUrl1 String maxlength(256),
	returnUrl2 String maxlength(256),
	returnUrl3 String maxlength(256),
	returnUrl4 String maxlength(256),
	returnUrl5 String maxlength(256),
	authEnabled Boolean,
	refreshEnabled Boolean
}

/** 단말기정보 */
entity LemonDevice {
	id Long required,
	uuid String required maxlength(36),
	pushToken String maxlength(2048),
	platformType String required maxlength(20),
	deviceVer String required maxlength(20),
	modelNm String required maxlength(50)
}

/** 레몬서비스 */
entity LemonService {
	serviceCd String required maxlength(30),
	domain String required maxlength(50),
	serviceNm String required maxlength(30),
	certEnabled Boolean required,
	jwtUri String maxlength(256),
	apiUrl String maxlength(256),
	initUri String maxlength(256),
	siteUrl String maxlength(256),
	hospitalCd String maxlength(20)
}

/** 통합회원매핑 */
entity LemonUser {
	id Long required,
	siteUserId Long required,
	accessToken String required maxlength(500),
	refreshToken String required maxlength(500),
	latestCertOn Instant required
}

/** 푸시수신이력 */
entity PushLog {
	id Long required,
	readOn Instant,
	receivedOn Instant,
	resultMsg String maxlength(2048),
	deletedOn Instant
}

/** 푸시메시지 */
entity PushMessage {
	id Long required,
	contents TextBlob required,
	fcmContents TextBlob required,
	createdBy Long required,
	createdOn Instant required
}

/** 푸시요청(수신자) */
entity PushRequest {
	id Long required,
	uuid String required maxlength(36),
	createdOn Instant required,
	userId Long
}

/** 통합인증 */
entity UnionCert {
	id Long required,
	certType String required maxlength(20),
	pwdChangedOn Instant,
	accntLockedOn Instant,
	pwdRetryCnt Integer,
	snsType String maxlength(20),
	uuid String maxlength(36),
	accessToken String maxlength(500),
	refreshToken String maxlength(500),
	latestCertOn Instant,
	simpleType String maxlength(20),
	simplePwd String maxlength(256),
	userAccnt String maxlength(30),
	userPwd String maxlength(256)
}

/** 개인정보변경이력 */
entity UnionChgLog {
	id Long required,
	userId Long required,
	chgCd String required maxlength(20),
	createdOn Instant required,
	beforeText String required maxlength(256),
	afterText String required maxlength(256)
}

/** 인증단말기 */
entity UnionDevice {
	id Long required,
	createdBy Long required,
	createdOn Instant required
}

/** 사용자비활성이력 */
entity UnionInactiveLog {
	id Long required,
	userId Long required,
	inactiveType String required maxlength(20),
	inactivedOn Instant required,
	activedOn Instant,
	withdrawalType String maxlength(20),
	withdrawalDesc String maxlength(100)
}

/** 로그인이력 */
entity UnionLoginLog {
	id Long required,
	userId Long required,
	logedOn Instant required,
	authType String required maxlength(20),
	loginType String required maxlength(20),
	userAccnt String maxlength(50),
	serviceCd String maxlength(30),
	serviceNm String maxlength(30),
	appNm String maxlength(50),
	appVer String maxlength(20),
	deviceUuid String maxlength(36)
}

/** 통합회원 */
entity UnionUser {
	id Long required,
	userStatus Boolean required,
	myCi String maxlength(256),
	inactivedOn Instant,
	withdrawalOn Instant,
	userNm String maxlength(50),
	birthday String maxlength(8),
	sex String maxlength(1),
	postNo String maxlength(6),
	roadAddr1 String maxlength(120),
	roadAddr2 String maxlength(100),
	email String maxlength(50),
	cellPhoneNo String maxlength(30),
	telecomCd String maxlength(20),
	countryCd String maxlength(20),
	mileage Integer,
	agreeOption String maxlength(50),
	createdBy Long required,
	createdOn Instant required,
	updatedBy Long,
	updatedOn Instant
}



// Relations
// 통합회원매핑
relationship ManyToOne {
	LemonUser{serviceCd required} to LemonService{lemonUser}
}

// 통합회원매핑
relationship ManyToOne {
	LemonUser{user required} to UnionUser{lemonUser}
}

// 푸시수신이력
relationship ManyToOne {
	PushLog{request required} to PushRequest{pushLog}
}

// 푸시메시지
relationship ManyToOne {
	PushMessage{serviceCd required} to LemonService{pushMessage}
}

// 푸시요청(수신자)
relationship ManyToOne {
	PushRequest{message required} to PushMessage{pushRequest}
}

// 통합인증
relationship ManyToOne {
	UnionCert{user required} to UnionUser{unionCert}
}

// 인증단말기
relationship ManyToOne {
	UnionDevice{cert required} to UnionCert{unionDevice}
}

// 인증단말기
relationship ManyToOne {
	UnionDevice{device required} to LemonDevice{unionDevice}
}



// Options
service * with serviceClass
paginate * with pagination
dto * with mapstruct
filter *

